
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

	Перем СообщениеТелеграммБоту; // СообщениеТелеграммБоту до записи объекта в базу  

#КонецОбласти

#Область ОбработчикиСобытий


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	СообщениеТелеграммБоту = СформироватьСообщениеТелеграммБоту();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
     	
     	Возврат;
     	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СообщениеТелеграммБоту) Тогда 
		СообщениеТелеграммБоту = СтрЗаменить(СообщениеТелеграммБоту,"№Заявки",ПрефиксацияОбъектовКлиентСервер.УдалитьЛидирующиеНулиИзНомераОбъекта(Номер));
		Если Справочники.ВКМ_СообщенияДляТгБота.ДобавитьУведомление(СообщениеТелеграммБоту ) = Неопределено Тогда
			
			ЖурналРегистрации.ДобавитьСообщениеДляЖурналаРегистрации("Формирование уведомления в справочнике. Запись не создана.", УровеньЖурналаРегистрации.Ошибка);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры



Процедура ОбработкаПроведения(Отказ, Режим)
	
	ДанныеДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор, "ВидДоговора");

	Если ДанныеДоговора.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскаяПлата Тогда 
		
		ТекстСообщения = "Выберите вид договора - Абонентская плата!!!";
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,Ссылка,"Договор","Объект",Отказ);	
		
	КонецЕсли;
			
			Запрос = Новый Запрос;
			Запрос.Текст =
				"ВЫБРАТЬ
				|	ДоговорыКонтрагентов.ВКМ_ДатаНачалаДействияДоговора КАК ДатаНачалаДействияДоговора,
				|	ДоговорыКонтрагентов.ВКМ_ДатаОкончанияДействияДоговора КАК ДатаОкончанияДействияДоговора,
				|	ДоговорыКонтрагентов.ВКМ_СтоимостьРаботЗаЧас КАК СтоимостьРаботЗаЧас
				|ИЗ
				|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
				|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
				|		ПО ВКМ_ОбслуживаниеКлиента.Договор.Наименование = ДоговорыКонтрагентов.Наименование
				|ГДЕ
				|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
			
			Запрос.УстановитьПараметр("Ссылка", Ссылка);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Если ВыборкаДетальныеЗаписи.ДатаНачалаДействияДоговора > Дата Или ВыборкаДетальныеЗаписи.ДатаОкончанияДействияДоговора < Дата Тогда
			
			         ТекстСообщения = "Выбранный договор недействителен в данный период";
			
		             ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,Ссылка,"Договор","Объект",Отказ);	
			
	           КонецЕсли;
			КонецЦикла;
			
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	
	Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
	Движение.Период = Дата;
	Движение.Клиент = Клиент;
	Движение.Сотрудник = Специалист;
	Движение.Договор = Договор;

	Для Каждого ТекСтрокаВыполненныеРаботы Из ВыполненныеРаботы Цикл	
      Движение.КоличествоЧасов = ТекСтрокаВыполненныеРаботы.ФактическиПотраченоЧасов ;
	  Движение.СуммаКОплате = ВыборкаДетальныеЗаписи.СтоимостьРаботЗаЧас * ТекСтрокаВыполненныеРаботы.ЧасыКОплатеКлиенту;
	КонецЦикла;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРаботы
	|ИЗ
	|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата, Сотрудник = &Сотрудник) КАК
	|		ВКМ_УсловияОплатыСотрудниковСрезПоследних";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Сотрудник", Специалист);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если  Выборка.Следующий() Тогда
		
		
	//этот регистр записывается после записи и закрытия документа	
	Движения.ВКМ_ВыполненныеСтрудникомРаботы.Записывать = Истина;
		
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ВыполненныеКлиентуРаботыОбороты.Сотрудник КАК Сотрудник,
		|	ВКМ_ВыполненныеКлиентуРаботыОбороты.КоличествоЧасовОборот КАК КоличествоЧасовОборот,
		|	ВКМ_ВыполненныеКлиентуРаботыОбороты.СуммаКОплатеОборот КАК СуммаКОплатеОборот,
		|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРаботы,0) КАК ПроцентОтРаботы,
		|	ВКМ_ОбслуживаниеКлиента.Дата
		|ИЗ
		|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Обороты КАК ВКМ_ВыполненныеКлиентуРаботыОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних КАК
		|				ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|			ПО ИСТИНА
		|		ПО ВКМ_ВыполненныеКлиентуРаботыОбороты.Сотрудник = ВКМ_ОбслуживаниеКлиента.Специалист
		|		И ВКМ_ОбслуживаниеКлиента.Специалист = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	  Движение = Движения.ВКМ_ВыполненныеСтрудникомРаботы.Добавить();
	  Движение.Период = ВыборкаДетальныеЗаписи.Дата;
	  Движение.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
	  Движение.ЧасовКОплате = ВыборкаДетальныеЗаписи.КоличествоЧасовОборот;
	  Движение.СуммаКоплате = ВыборкаДетальныеЗаписи.КоличествоЧасовОборот * ВыборкаДетальныеЗаписи.СуммаКОплатеОборот * ВыборкаДетальныеЗаписи.ПроцентОтРаботы / 100;
	КонецЦикла;	
	
	Иначе   
		ТекстСообщения = СтрШаблон("Документ не проведен! У сотрудника %1  не установлен  процент оплаты от выполненных работ.", Специалист);	
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,Ссылка,,,Отказ);	
		
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СформироватьСообщениеТелеграммБоту()
	
	ТекстСообщения = "";
	Если ЭтоНовый() Тогда
		
		ТекстСообщения = "Создана новая заявка";
		
	Иначе
		
		ДанныеПроведенногоДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка,
		"ДатаПроведенияРабот, ВремяНачалаРабот, ВремяОкончанияРабот, Специалист");
		
		НовыйДокумент = Новый Структура;
		НовыйДокумент.Вставить("ДатаПроведенияРабот", ДатаПроведенияРабот);
		НовыйДокумент.Вставить("ВремяНачалаРабот", ВремяНачалаРабот);
		НовыйДокумент.Вставить("ВремяОкончанияРабот", ВремяОкончанияРабот);
		НовыйДокумент.Вставить("Специалист", Специалист);
		
		Если  Не ОбщегоНазначения.ДанныеСовпадают(ДанныеПроведенногоДокумента, НовыйДокумент) Тогда
			
			ТекстСообщения = "Произошли изменения в заявке";
			
		КонецЕсли;
		
	КонецЕсли;
		
	ТекстСообщения = СтрШаблон("%1 Заявка от %2, Контрагент %3, Дата  %4 с %5 по %6, Специалист: %7",ТекстСообщения, 
						Формат(Дата,"ДФ=dd.MM.yyyy"), Клиент, Формат(ДатаПроведенияРабот,"ДФ=dd.MM.yyyy"),
						Формат(ВремяНачалаРабот,"ДФ=ЧЧ.мм"),Формат(ВремяОкончанияРабот,"ДФ=ЧЧ.мм"), Специалист);
	
    Возврат ТекстСообщения; 
	
КонецФункции
   

#КонецОбласти


#КонецЕсли